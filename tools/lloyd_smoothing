#! /usr/bin/env python
# -*- coding: utf-8 -*-
import numpy
from matplotlib import pyplot as plt
import pyfvm


def smoothing():
    mesh, _, _, _ = pyfvm.reader.read('circle000.vtu')

    # points = numpy.array([
    #     [0.0, 0.0, 0.0],
    #     [1.0, 0.0, 0.0],
    #     [1.0, 1.0, 0.0],
    #     [0.0, 1.0, 0.0],
    #     [0.1, 0.5, 0.0]
    #     ])
    # cells = numpy.array([
    #     [0, 1, 4],
    #     [1, 2, 4],
    #     [2, 3, 4],
    #     [3, 0, 4]
    #     ])
    # mesh = pyfvm.mesh_tri.MeshTri(points, cells)

    # 2D mesh
    assert all(mesh.node_coords[:, 2] == 0.0)

    boundary_verts = mesh.get_vertices('boundary')

    # mesh.show()
    # plt.show()
    for k in range(100):
        print(k)
        new_points = mesh.centroids
        new_points[boundary_verts] = mesh.node_coords[boundary_verts]
        mesh = pyfvm.mesh_tri.MeshTri(new_points, mesh.cells['nodes'])
        # mesh.show()
        # plt.show()
        mesh.write('circle%03d.vtu' % (k+1))

    return


if __name__ == '__main__':
    smoothing()
